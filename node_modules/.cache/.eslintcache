[{"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/index.js":"1","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/App.js":"2","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Navbar.js":"3","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/Services.js":"4","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/Home.js":"5","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/HeroSection.js":"6","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Button.js":"7","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Footer.js":"8","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Cards.js":"9","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/CardItem.js":"10","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/Login.js":"11","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/HTMLRendering.js":"12","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/constants.js":"13","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Login.js":"14","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/SignUp.js":"15","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js":"16","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddNewSeed.js":"17","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/TinyMCEComponent.js":"18","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/SeedDetails.js":"19","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/SignIn.js":"20","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/card2.js":"21","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/shared/LoginChecker.js":"22","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/CrawlerModal.js":"23"},{"size":147,"mtime":1618093871917,"results":"24","hashOfConfig":"25"},{"size":2601,"mtime":1618146032544,"results":"26","hashOfConfig":"25"},{"size":2471,"mtime":1618160944038,"results":"27","hashOfConfig":"25"},{"size":1371,"mtime":1618160574121,"results":"28","hashOfConfig":"25"},{"size":647,"mtime":1618137927374,"results":"29","hashOfConfig":"25"},{"size":4694,"mtime":1618147391429,"results":"30","hashOfConfig":"25"},{"size":904,"mtime":1618124228189,"results":"31","hashOfConfig":"25"},{"size":2085,"mtime":1618160650194,"results":"32","hashOfConfig":"25"},{"size":2000,"mtime":1618150783712,"results":"33","hashOfConfig":"25"},{"size":886,"mtime":1618137927386,"results":"34","hashOfConfig":"25"},{"size":603,"mtime":1618136228918,"results":"35","hashOfConfig":"25"},{"size":894,"mtime":1617989505056,"results":"36","hashOfConfig":"37"},{"size":54,"mtime":1617991434049,"results":"38","hashOfConfig":"25"},{"size":1778,"mtime":1618003099018,"results":"39","hashOfConfig":"37"},{"size":2365,"mtime":1618144230380,"results":"40","hashOfConfig":"25"},{"size":2973,"mtime":1618161754712,"results":"41","hashOfConfig":"25"},{"size":3517,"mtime":1618160574118,"results":"42","hashOfConfig":"25"},{"size":1774,"mtime":1618140155834,"results":"43","hashOfConfig":"25"},{"size":7097,"mtime":1618160574125,"results":"44","hashOfConfig":"25"},{"size":2006,"mtime":1618140210662,"results":"45","hashOfConfig":"25"},{"size":927,"mtime":1618136228918,"results":"46","hashOfConfig":"25"},{"size":315,"mtime":1618122244209,"results":"47","hashOfConfig":"25"},{"size":3394,"mtime":1618160574119,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wz2qck",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1isuq9e",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/index.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/App.js",["111","112"],"import React, {useEffect, useState} from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport Home from \"./components/pages/Home\";\nimport { BrowserRouter as Router, Switch, Route,Redirect } from \"react-router-dom\";\nimport Services from \"./components/pages/Services\";\nimport Login from \"./components/pages/Login\";\nimport SignUp from \"./components/SignUp\";\nimport AddCrawler from \"./components/AddCrawler\";\nimport AddNewSeed from \"./components/AddNewSeed\";\nimport SeedDetailsComponent from \"./components/pages/SeedDetails\";\nimport CheckUserTokenValidity from \"./components/shared/LoginChecker\";\n\n\n\nfunction App() {\n\n  const TOKEN = localStorage.getItem('TOKEN');\n  const [isLoggedIn,setIsLoggedIn]  = useState(false);\n  const [userDetails,setUserDetails] = useState({});\n  const [userDetailsLoaded,setUserDetailsLoaded] = useState(false);\n  function setIsUserLoggedIn(bool,userDetails){\n    setUserDetailsLoaded(false);\n\n    setUserDetails(userDetails);\n    setIsLoggedIn(bool);\n    setUserDetailsLoaded(true);\n    console.log(\"User logged in!\");\n  }\n\n  useEffect(()=>{\n    CheckUserTokenValidity(TOKEN).then(response=>response.data).then(response=>{\n      setIsLoggedIn(response.success);\n      setUserDetails(response.userData);\n      setUserDetailsLoaded(true);\n\n\n    }).catch(err=>{\n\n          setUserDetailsLoaded(true);\n        }\n\n\n    );\n  },[])\n  function tempFunction(e){\n    console.log(isLoggedIn);\n    console.log(userDetails);\n    console.log(userDetailsLoaded);\n  }\n\n  return (\n    <>\n      <Router>\n        {userDetailsLoaded ? <Navbar isLoggedIn={isLoggedIn}\n                                     loggedInCallback={setIsUserLoggedIn}/>:null}\n        <Switch>\n\n          <Route exact path=\"/\" component={()=><Home setIsUserLoggedIn={setIsUserLoggedIn} isLoggedIn={isLoggedIn} userDetails={userDetails}\n                                                     userDetailsLoaded={userDetailsLoaded}/>}  />\n          <Route exact path=\"/all-seeds\" component={Services} />\n          <Route exact path=\"/log-in\" component={Login} />\n          <Route exact path=\"/sign-up\" component={SignUp} />\n          {userDetailsLoaded && isLoggedIn ?\n                <Route exact path=\"/add-new-seed\"  component={AddNewSeed} />\n\n          :null}\n          {userDetailsLoaded && isLoggedIn ?\n              <Route exact render={()=><Redirect to={{pathname:'/'}}/>} path=\"/add-new-crawler\" component={AddCrawler} />\n          :null}\n\n\n\n\n          <Route exact path=\"/seed-details\" component={SeedDetailsComponent}/>\n\n\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Navbar.js",["113","114","115","116","117","118","119"],"import React, { useState, useEffect } from 'react';\nimport { Button } from './Button';\nimport { Link,useHistory } from 'react-router-dom';\nimport './Navbar.css';\nimport axios from 'axios'\nimport {BACKEND_URL} from \"../constants\";\nimport CheckUserTokenValidity from \"./shared/LoginChecker\";\nfunction Navbar(props) {\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n  const [isLoggedIn,setIsLoggedIn] = useState(props.isLoggedIn);\n  const history  = useHistory();\n  const TOKEN = localStorage.getItem('TOKEN');\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoggedIn(props.isLoggedIn);\n\n\n\n    showButton();\n  },[]);\n\n  function onLogOut(){\n    localStorage.removeItem('TOKEN');\n    console.log(\"Logged out!\");\n    setIsLoggedIn(false);\n\n    props.loggedInCallback(false,{});\n    history.push('/');\n\n  }\n\n\n  window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <div className=\"navbar-logo\">\n            <Link to='/' onClick={closeMobileMenu}>\n              <img src=\"/MAIN_LOGO.png\" id={'main-logo-navbar'}/>\n            </Link>\n          </div>\n\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/all-seeds'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n              All Seeds\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/log-in'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Our Portals\n              </Link>\n            </li>\n\n\n          </ul>\n          {isLoggedIn ?<Button onClick={onLogOut} buttonStyle='btn--outline'>Log Out</Button>:null}\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/Services.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/Home.js",["120","121","122","123"],"import React ,{useState,useEffect} from 'react';\nimport '../../App.css';\nimport Cards from '../Cards';\nimport HeroSection from '../HeroSection';\nimport Footer from '../Footer';\nimport CheckUserTokenValidity from \"../shared/LoginChecker\";\nimport Navbar from \"../Navbar\";\nfunction Home(props) {\n\n  return (\n    <>\n        {props.userDetailsLoaded ?\n            (<>\n                <HeroSection userDetails={props.userDetails} isLoggedIn={props.isLoggedIn} setIsUserLoggedIn={props.setIsUserLoggedIn}/>\n            <Cards isLoggedIn={props.isLoggedIn}/>\n            <Footer />\n            </>)\n            :null}\n    </>\n  );\n}\n\nexport default Home;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/HeroSection.js",["124"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n// import { Button } from \"./Button\";\nimport \"./HeroSection.css\";\nimport SignUpComponent from \"./SignUp\";\nimport SignInComponent from \"./SignIn\";\nimport axios from 'axios';\n// import CheckUserTokenValidity from \"./shared/LoginChecker\";\nimport styled from \"styled-components\";\nimport {BACKEND_URL} from \"../constants\";\n\nfunction HeroSection(props) {\n  const [showSignUpForm, setShowSignUpForm] = useState(!props.isLoggedIn);\n  const [isLoggedIn, setIsLoggedIn] = useState(props.isLoggedIn);\n  const [userDetails, setUserDetails] = useState(props.userDetails);\n\n  function callbackForShowSignUpForm(value) {\n    setShowSignUpForm(value);\n  }\n  function callbackToSetSignInState(value, userDetails) {\n    setIsLoggedIn(value);\n    setUserDetails(userDetails);\n    console.log(\"SIGNED IN \" + value);\n\n            props.setIsUserLoggedIn(value, userDetails);\n\n\n\n  }\n  useEffect(() => {\n    axios.get(`${BACKEND_URL}user-routes/get-user-data/${props.userDetails.id}`)\n        .then(response=>response.data)\n        .then(response=>{\n          console.log(response);\n\n            setIsLoggedIn(props.isLoggedIn);\n            setUserDetails(response.userData);\n            setShowSignUpForm(!props.isLoggedIn);\n\n\n        })\n\n\n  }, []);\n\n  const showLoggingInForms = () =>\n    showSignUpForm ? (\n      <SignUpComponent         signInCallBack={callbackToSetSignInState}\n                               callback={callbackForShowSignUpForm}\n      />\n    ) : (\n      <SignInComponent\n        signInCallBack={callbackToSetSignInState}\n        callback={callbackForShowSignUpForm}\n      />\n    );\n\n  return (\n    <div className=\"container\">\n      <div className=\"hero-container left-container\">\n        <video src=\"/videos/video-1.mp4\" autoPlay loop muted />\n        {props.isLoggedIn ? (\n          <div className=\"inside-video-2\">\n            <h1 className={\"seed\"}>Hello,</h1>\n            <h1 className=\"seed\">\n              <span className=\"right_animation\">\n                {props.userDetails.username}!\n              </span>\n            </h1>\n          </div>\n        ) : (\n          <div className=\"inside-video\">\n            <h2>What are you waiting for?</h2>\n            <p>Start Contributing</p>\n            <p>to</p>\n            <h1 className=\"seed\">\n              <span className=\"right_animation\">se</span>.\n              <span className=\"left_animation\">ed</span>\n            </h1>\n          </div>\n        )}\n      </div>\n      <div className=\"middle-line\">\n        <div className=\"line\"></div>\n      </div>\n      <div className=\"right-container\" id=\"overrule\">\n        {isLoggedIn ? (\n          <MainHeading>Your Profile</MainHeading>\n        ) : (\n          <h1>{showSignUpForm ? \"Sign Up\" : \"Log In\"}</h1>\n        )}\n        <br></br>\n        <Line></Line>\n        <br></br>\n        {isLoggedIn ? (\n          <HeroContainer>\n            <DetailsHero>\n              <HeadingContainer>\n                <h2>Number of seeds : {userDetails.numberOfSeedsWritten}</h2>\n              </HeadingContainer>\n              <HeadingContainer>\n                <h2>Number of crawls : {userDetails.numberOfCrawlsWritten}</h2>\n                <br />\n                <Line></Line>\n              </HeadingContainer>\n              <HeadingContainer>\n                <br />\n              </HeadingContainer>\n\n              <Link to=\"/add-new-seed\">\n                <Button>Add Seed! </Button>\n              </Link>\n            </DetailsHero>\n          </HeroContainer>\n        ) : (\n          showLoggingInForms()\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst MainHeading = styled.h1`\n  background-image: linear-gradient(to top, #e9d9ff 50%, #fbc2eb 60%);\n  background-size: 100%;\n  background-clip: text;\n  text-fill-color: transparent;\n  -webkit-background-clip: text;\n  -moz-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  -moz-text-fill-color: transparent;\n  font-size: 2.5rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.9rem 2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.3s all ease-out;\n  font-size: 1rem;\n  font-weight: bolder;\n  &:hover {\n    background-color: #100828;\n    color: white;\n  }\n`;\n\nconst HeroContainer = styled.div``;\n\nconst DetailsHero = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  color: white;\n`;\n\nconst HeadingContainer = styled.div`\n  padding: 1rem 0rem;\n`;\n\nconst Line = styled.div`\n  background: white;\n  height: 0.1rem;\n  width: 80%;\n  text-align: center;\n  align-content: center;\n  margin: auto;\n`;\n\nexport default HeroSection;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Button.js",["125"],"// import React from 'react';\n// import './Button.css';\n// import { Link } from 'react-router-dom';\n\n// export function Button() {\n//   return (\n//     <Link to='sign-up'>\n//       <button className='btn'>Sign Up</button>\n//     </Link>\n//   );\n// }\n\nimport React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n\n  );\n};\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Footer.js",["126","127"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { Button } from \"./Button\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nfunction Footer() {\n  return (\n\n    <Main>\n      <div className=\"footer-container\">\n        <section className=\"footer-subscription\" style={{ fontSize: \"3rem\" }}>\n          <p\n            className=\"footer-subscription-heading\"\n            style={{ fontSize: \"2rem\" }}\n          >\n            Be a part of an amazing community\n          </p>\n          <p\n            className=\"footer-subscription-text\"\n            style={{ fontSize: \"1.5rem\" }}\n          >\n            Write stories, books, articles together with the World\n          </p>\n        </section>\n        <Names>\n          <p className=\"footer-subscription-text\" style={{ fontSize: \"2rem\" }}>\n            Made with love by:{\"  \"}\n            <br />\n            <Line></Line>\n          </p>\n          <div style={{ fontSize: \"1.2rem\", fontFamily: \"Quicksand\" }}>\n            <p style={{ fontSize: \"1.2rem\", fontFamily: \"Quicksand\" }}>\n              Aryamann Ningombam\n            </p>\n          </div>\n          <br />\n          <div style={{ fontSize: \"1.2rem\" }}>\n            <p style={{ fontFamily: \"Quicksand\" }}>Chirag Rao</p>\n          </div>\n          <br />\n          <div style={{ fontSize: \"1.2rem\" }}>\n            <p style={{ fontFamily: \"Quicksand\" }}>Raayaan Sahu</p>\n          </div>\n          <br />\n          <div style={{ fontSize: \"1.2rem\" }}>\n            <p style={{ fontFamily: \"Quicksand\" }}>Kunal Bhatia</p>\n          </div>\n          <br />\n        </Names>\n      </div>\n    </Main>\n\n  );\n}\n\nconst Names = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 24px;\n  padding: 24px;\n  color: rgb(226, 226, 226);\n  flex-direction: column;\n`;\n\nconst Main = styled.div`\n  font-size: 2rem;\n`;\n\nconst Line = styled.div`\n  background: white;\n  height: 0.1rem;\n  width: 80%;\n  text-align: center;\n  align-content: center;\n  margin: auto;\n  margin-top: 0.5rem;\n`;\n\nexport default Footer;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Cards.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/CardItem.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/Login.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/HTMLRendering.js",[],["128","129"],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/constants.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/Login.js",["130","131","132"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Cookies from \"js-cookie\";\nimport {BACKEND_URL} from \"../constants\";\n\nconst Login = () => {\n  const [email,setEmail] = useState('aryamannsingh9@gmail.com');\n  const [password,setPassword] = useState('15052002')\n\n\n\n  const submitHandler = async (e) => {\n    const dataToSend = {email:email,password:password};\n    e.preventDefault();\n    console.log(dataToSend);\n\n    axios.post(`${BACKEND_URL}/user-routes/sign-in/`,dataToSend,\n        {\n\n          headers: {'Content-Type': 'application/json'}\n        }\n      )\n      .then(result=>{\n        console.log(result.data);\n    })\n      .catch((event) => console.log(event.message));\n  };\n\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <div>\n          <Label>Email: </Label>\n          <Input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter your Email Address\"\n            value={email}\n            onChange={(e)=>{setEmail(e.target.value)}}\n          />\n        </div>\n        <div>\n          <Label>Password: </Label>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter a password\"\n            value={password}\n            onChange={(e)=>{setPassword(e.target.value)}}\n          />\n        </div>\n        <Input type=\"submit\" value=\"Login\" />\n        {/* <Button onClick={protect}>Get Crawling!</Button> */}\n      </form>\n    </div>\n  );\n};\n\nconst Label = styled.label`\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 20%;\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem 2rem;\n  margin: 1rem;\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 2rem;\n  margin: 1rem;\n`;\n\nexport default Login;\n",["133","134"],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/SignUp.js",["135"],"import React, { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport {BACKEND_URL} from \"../constants\";\nimport './SignUp.css'\n\n\nexport default function SignUpComponent (props){\n    const [email,setEmail] = useState('');\n    const [username,setUsername]  = useState('');\n    const [firstName,setFirstName] = useState('');\n    const [lastName,setLastName] = useState('');\n    const [password,setPassword] = useState('');\n\n    function onSubmit(e){\n        e.preventDefault();\n        axios.post(BACKEND_URL+'user-routes/sign-up',{\n            email:email,\n            username:username,\n            firstName:firstName,\n            lastName:lastName,\n            password:password,\n        },{\n            headers:{\n                'Content-Type':\"application/json\"\n            }\n        }).then(result=>{\n            result=result.data;\n            if (result.success){\n                console.log(\"New user made!!\");\n                console.log(result);\n                localStorage.setItem('TOKEN',result.token);\n                props.signInCallBack(true,result.userData);\n            }else{\n                console.log(\"New user rejected!\");\n                alert(result.data.message);\n            }\n\n        }).catch(err=>{\n            console.log(\"Error making user!!\");\n            alert(err);\n        })\n    }\n\n    return (\n        <div className=\"login-form\">\n            <form >\n                <input className=\"input-br\" type=\"text\" placeholder='Username' onChange={(e)=>{setUsername(e.target.value)}}/>\n                <input className=\"input-br\" type=\"email\" placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}/>\n                <input className=\"input-br\" type=\"text\" placeholder='First Name' onChange={(e)=>{setFirstName(e.target.value)}}/>\n                <input className=\"input-br\" type=\"text\" placeholder='Last Name' onChange={(e)=>{setLastName(e.target.value)}}/>\n\n                <input className=\"input-br alag\" type=\"password\" placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}/>\n                <p className=\"login-target\"><Link className=\"already\" onClick={e=>{props.callback(false)}}> Already Registered? Login!</Link></p>\n\n                <button className=\"input-button\" onClick={onSubmit}>Submit</button>\n            </form>\n\n        </div>\n    );\n};\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js",["136","137","138"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport TinyMCEComponent from \"./TinyMCEComponent\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function AddCrawler(props) {\n  function tinyCallback(value) {\n    setBody(value);\n  }\n  const history = useHistory();\n  const TOKEN = localStorage.getItem(\"TOKEN\");\n\n  const [description, setDescription] = useState(\n    props.location.state.seed.description\n  );\n  const [body, setBody] = useState(\"\");\n\n  const submitHandler = async (e) => {\n    const detailsToSend = {\n      description: description,\n      body: body,\n      parentWritingId: props.location.state.seed._id,\n    };\n    e.preventDefault();\n    console.log(detailsToSend);\n    axios\n      .post(\n        BACKEND_URL+\"writing-routes/add-new-crawler\",\n        detailsToSend,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${TOKEN}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(\"New crawler added!\");\n        console.log(response);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(\"Error adding new crawler!\");\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <form>\n        <Inputs>\n          <label htmlFor={description}>Enter Desc:</label>\n          <Input\n            value={description}\n            placeholder=\"Description\"\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n            type=\"text\"\n          />\n        </Inputs>\n        {/*<textarea  onChange={(e) => (setBody(e.target.value))} placeholder='Body' name=\"body2\" id=\"body2\"/>*/}\n        <TinyMCE>\n          <TinyMCEComponent\n            body={props.location.state.body}\n            callback={tinyCallback}\n          />\n        </TinyMCE>\n        <LastLine>\n          <Button onClick={submitHandler}>Submit</Button>\n        </LastLine>\n      </form>\n    </div>\n  );\n}\n\nconst Button = styled.button`\n  padding: 0.3rem 2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.3s all ease-out;\n  font-size: 1rem;\n  font-weight: bolder;\n  &:hover {\n    background-color: #100828;\n    color: whitesmoke;\n  }\n`;\n\nconst LastLine = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n  border-radius: 10px;\n  background-color: #100828;\n  color: white;\n  width: 80%;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InputImage = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n`;\n\nconst AddSeed = styled.div`\n  background-color: #dad8d8;\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n`;\n\nconst TinyMCE = styled.div`\n  margin: 1rem;\n`;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddNewSeed.js",["139"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport TinyMCEComponent from \"./TinyMCEComponent\";\nimport styled from \"styled-components\";\nexport default function AddNewSeed() {\n  const TOKEN = localStorage.getItem(\"TOKEN\");\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [imageURL, setImageURL] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [body, setBody] = useState(``);\n\n  function tinyCallback(value) {\n    setBody(value);\n  }\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"imageURL\", imageURL);\n    formData.append(\"description\", description);\n    formData.append(\"body\", body);\n\n    axios\n      .post(`${BACKEND_URL}writing-routes/add-new-seed`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${TOKEN}`,\n        },\n      })\n      .then((response) => {\n        console.log(\"New seed added!\");\n        console.log(response);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(\"Error adding new seed!\");\n        console.log(err);\n      });\n  };\n\n  return (\n    <AddSeed>\n      <form>\n        <Inputs>\n          <label htmlFor={title}>Enter Title: </label>\n          <Input\n            value={title}\n            placeholder=\"Title\"\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n            type=\"text\"\n          />\n          <label htmlFor={title}>Enter Desc: </label>\n          <Input\n            value={description}\n            placeholder=\"Description\"\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n            type=\"text\"\n          />\n        </Inputs>\n        <TinyMCE>\n          <TinyMCEComponent\n            style={{ margin: \"10rem\" }}\n            callback={tinyCallback}\n          />\n        </TinyMCE>\n        <LastLine>\n          <InputImage\n            onChange={(e) => {\n              setImageURL(e.target.files[0]);\n            }}\n            id=\"imageURL\"\n            name=\"imageURL\"\n            type=\"file\"\n            accept=\"image/*\"\n            style={{ margin: \"2rem\", color: \"#100828\" }}\n          />\n          <Button onClick={submitHandler}>Submit</Button>\n        </LastLine>\n      </form>\n    </AddSeed>\n  );\n}\n\nconst Button = styled.button`\n  padding: 0.3rem 2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.3s all ease-out;\n  font-size: 1rem;\n  font-weight: bolder;\n  &:hover {\n    background-color: #100828;\n    color: whitesmoke;\n  }\n`;\n\nconst LastLine = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n  border-radius: 10px;\n  background-color: #100828;\n  color: white;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InputImage = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n  #file-upload-button {\n    background-color: black;\n  }\n`;\n\nconst AddSeed = styled.div`\n  background: linear-gradient(to top, #100828, whitesmoke);\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nconst TinyMCE = styled.div`\n  margin: 1rem;\n`;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/TinyMCEComponent.js",[],"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/SeedDetails.js",["140","141","142","143","144","145","146","147"],"import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../../constants\";\nimport styled from \"styled-components\";\nimport \"./Details.scss\";\n\nimport CrawlerModal from \"../CrawlerModal\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as outlined } from \"@fortawesome/free-regular-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SeedDetailsComponent(props) {\n  const [allCrawlers, setAllCrawlers] = useState([]);\n  const [mainSeed, setMainSeed] = useState(props.location.state.seed);\n  const [wait, setWait] = useState(true);\n  console.log(props.location.state.isLoggedIn);\n  const [starCounter, setStarCounter] = useState(\n    props.location.state.seed.stars\n  );\n  const [seedStarred, setSeedStarred] = useState(false);\n  const [body, setBody] = useState(\"\");\n  const TOKEN = localStorage.getItem(\"TOKEN\");\n  function renderCrawlers() {\n    return allCrawlers.map((crawler) => <h1>crawler.authorID</h1>);\n  }\n  function changeSeedStarred() {\n    axios\n      .put(\n        `${BACKEND_URL}writing-routes/update-writing-stars/${mainSeed._id}`,\n        {\n          newNumberOfStars: starCounter + (!seedStarred ? 1 : -1),\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${TOKEN}`,\n          },\n        }\n      )\n      .then((response) => {\n        response = response.data;\n        if (response.success) {\n          console.log(\"Stars Updated!\");\n          setStarCounter(starCounter + (!seedStarred ? 1 : -1));\n          console.log(response);\n          setSeedStarred(!seedStarred);\n        } else {\n          console.log(\"Could not update stars!!\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error updating number of stars!!\");\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    axios\n      .get(\n        `${BACKEND_URL}writing-routes/get-seed-body-and-stars/${props.location.state.seed._id}`\n      )\n      .then((response) => {\n        if (response.data.success) {\n          setBody(response.data.body);\n          setStarCounter(response.data.stars);\n\n          axios\n            .get(\n              `${BACKEND_URL}writing-routes/get-crawlers-for-seed/${props.location.state.seed._id}/`\n            )\n            .then((allCrawlers) => {\n              if (allCrawlers.data.success) {\n                console.log(\"All crawlers arrived!\");\n\n                setAllCrawlers(allCrawlers.data.allCrawlers);\n              } else {\n                console.log(\"Could not fetch all crawlers!\");\n              }\n            })\n            .catch((err) => {\n              console.log(\"Error getting all the crawlers!\");\n              console.log(err);\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error!\");\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Full>\n      <SeedContainer>\n        <SeedWrapper>\n          <SeedTitle>\n            {mainSeed.title}\n            <StarsArea>{starCounter}</StarsArea>\n          </SeedTitle>\n\n          <AuthorName>\n            {\" \"}\n            By {mainSeed.userDetails.username}\n            <StarsArea>\n              {props.location.state.isLoggedIn ? (\n                <FontAwesomeIcon\n                  onClick={changeSeedStarred}\n                  icon={seedStarred ? faStar : outlined}\n                />\n              ) : null}\n            </StarsArea>\n          </AuthorName>\n          <Seed mainSeed={mainSeed}>\n            <h3 dangerouslySetInnerHTML={{ __html: body }} />\n          </Seed>\n        </SeedWrapper>\n\n        <CrawlerContainer>\n          {allCrawlers.length === 0 ? (\n            <h1>No Crawls</h1>\n          ) : (\n            allCrawlers.map((crawler) => <CrawlerModal crawler={crawler} />)\n          )}\n\n          {props.location.state.isLoggedIn ? (\n            <Link\n              to={{\n                pathname: \"/add-new-crawler\",\n                state: {\n                  seed: mainSeed,\n                  body: body,\n                },\n              }}\n            >\n              <Button>Add New Crawler</Button>\n            </Link>\n          ) : null}\n        </CrawlerContainer>\n      </SeedContainer>\n    </Full>\n  );\n}\n\nconst SeedTitle = styled.div`\n  font-size: 2.3rem;\n  text-align: center;\n`;\n\nconst StarsArea = styled.div`\n  float: right;\n  font-size: 1.6rem;\n`;\n\n// const DangerousText = styled.div`\n//   font-size: 1.2rem;\n//   color: white;\n// `;\n// const CrawlerAuthorName = styled.div`\n//   font-size: 1.2rem;\n//   color: white;\n//   text-align: center;\n// // `;\n// const HeadingContainer = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   padding: 2rem;\n//   font-size: 1.5rem;\n//   flex-direction: column;\n// `;\n\n// const ButtonWrapper = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\nconst Button = styled.button`\n  padding: 0.3rem 2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.3s all ease-out;\n  font-size: 1rem;\n  font-weight: bolder;\n  &:hover {\n    background-color: #100828;\n    color: whitesmoke;\n  }\n`;\n\nconst Full = styled.div`\n  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n    url(\"/images/wallpaper.jpg\");\n  background-size: cover;\n  background-repeat: no-repeat;\n  overflow: hidden;\n  height: 88vh;\n`;\nconst AuthorName = styled.div`\n  text-align: center;\n  font-size: 1.1rem;\n  margin: 0.3rem;\n`;\n\nconst SeedContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  box-sizing: border-box;\n  /* overflow: scroll; */\n`;\n\nconst SeedWrapper = styled.div`\n  color: white;\n  /* margin: 3rem; */\n  height: 70vh;\n  max-width: 70vw;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  margin: 2.5rem 4.5rem;\n  /* padding: 2.5rem 4.5rem */\n  /* transform: translateY(-25%); */\n  overflow: scroll;\n`;\n\nconst Seed = styled.div`\n  font-size: 1.1rem;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 3rem 9rem 3rem;\n  /* img {\n    width: 40%;\n    height: 220px;\n    border-radius: 50%;\n    align-items: center;\n    text-align: center;\n    margin-top: 2rem;\n  } */\n`;\n\nconst Crawler = styled.div`\n  cursor: pointer;\n  backdrop-filter: blur(5px);\n  background-color: rgba(119, 88, 255, 0.2);\n`;\n\nconst CrawlerContainer = styled.div`\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 20px;\n  height: 70vh;\n  transform: translateY(6%);\n  margin-right: 1rem;\n`;\n\nconst CrawlerWrapper = styled.div`\n  color: white;\n  margin: 3rem;\n  max-width: 50%;\n  height: 30%;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 2rem 3rem;\n  border-radius: 20px;\n  cursor: pointer;\n`;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/SignIn.js",["148"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { BACKEND_URL } from \"../constants\";\nimport \"./SignUp.css\";\n\nexport default function SignInComponent(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function onSubmit(e) {\n    e.preventDefault();\n    axios\n      .post(\n        BACKEND_URL + \"user-routes/sign-in\",\n        {\n          email: email,\n          password: password,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((result) => {\n        result = result.data;\n        if (result.success) {\n          console.log(\"User signed in!\");\n          console.log(\"below is result\");\n          console.log(result);\n          localStorage.setItem(\"TOKEN\", result.token);\n          props.signInCallBack(true, result.userData);\n        } else {\n          console.log(\"User sign in rejected!\");\n          alert(result);\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error signing user in!\");\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"login-form\">\n      <form>\n        <input\n          className=\"input-br\"\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <input\n          className=\"input-br alag\"\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <p className=\"login-target\">\n          <Link\n            className=\"already\"\n            onClick={(e) => {\n              props.callback(true);\n            }}\n          >\n            {\" \"}\n            Not Registered? Sign Up!\n          </Link>\n        </p>\n        <button className=\"input-button\" onClick={onSubmit}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/card2.js",["149","150"],"import React, { Component } from \"react\";\nimport axiom from \"../axiom.jpg\";\nimport styled from \"styled-components\";\n\nimport \"./pages/login.css\";\nimport \"./card2.css\";\n\nconst Card = (props) => {\n  return (\n    <>\n      <CardBody className=\"card-body\">\n        <div className=\"card text-center\">\n          <div className=\"overflow\">\n            <img\n              className={\"portal-cards-image\"}\n              src={props.imagePath}\n              alt='professionals\"'\n            ></img>\n          </div>\n          <div className=\"text-dark\">\n            <h4 className=\"card-title\">{props.title}</h4>\n\n            {/* <a href=\"#\" className=\"btn btn-outline-success\">\n              Go anywhere\n            </a> */}\n          </div>\n        </div>\n      </CardBody>\n    </>\n  );\n};\nexport default Card;\n\nconst CardBody = styled.div`\n  cursor: pointer;\n  transition: 0.4s ease-out all;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/shared/LoginChecker.js",["151"],"import React from 'react';\nimport axios from 'axios';\nimport {BACKEND_URL} from \"../../constants\";\n\n\nexport default  function CheckUserTokenValidity(TOKEN){\n    return axios.get(BACKEND_URL+'user-routes/check-user-validity',{\n        headers: {\n            'Authorization' : `Bearer ${TOKEN}`\n        }\n    });\n\n\n}\n","/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/CrawlerModal.js",[],{"ruleId":"152","severity":1,"message":"153","line":45,"column":5,"nodeType":"154","endLine":45,"endColumn":7,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":46,"column":12,"nodeType":"158","messageId":"159","endLine":46,"endColumn":24},{"ruleId":"156","severity":1,"message":"160","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"156","severity":1,"message":"161","line":6,"column":9,"nodeType":"158","messageId":"159","endLine":6,"endColumn":20},{"ruleId":"156","severity":1,"message":"162","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":30},{"ruleId":"156","severity":1,"message":"163","line":10,"column":10,"nodeType":"158","messageId":"159","endLine":10,"endColumn":16},{"ruleId":"156","severity":1,"message":"164","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":14},{"ruleId":"152","severity":1,"message":"165","line":31,"column":5,"nodeType":"154","endLine":31,"endColumn":7,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":52,"column":15,"nodeType":"169","endLine":52,"endColumn":66},{"ruleId":"156","severity":1,"message":"170","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":24},{"ruleId":"156","severity":1,"message":"171","line":1,"column":25,"nodeType":"158","messageId":"159","endLine":1,"endColumn":34},{"ruleId":"156","severity":1,"message":"162","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":30},{"ruleId":"156","severity":1,"message":"172","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":14},{"ruleId":"152","severity":1,"message":"173","line":45,"column":6,"nodeType":"154","endLine":45,"endColumn":8,"suggestions":"174"},{"ruleId":"156","severity":1,"message":"175","line":15,"column":10,"nodeType":"158","messageId":"159","endLine":15,"endColumn":14},{"ruleId":"156","severity":1,"message":"176","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"175","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":14},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"156","severity":1,"message":"171","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"181","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":15},{"ruleId":"156","severity":1,"message":"182","line":72,"column":7,"nodeType":"158","messageId":"159","endLine":72,"endColumn":13},{"ruleId":"177","replacedBy":"183"},{"ruleId":"179","replacedBy":"184"},{"ruleId":"156","severity":1,"message":"171","line":1,"column":26,"nodeType":"158","messageId":"159","endLine":1,"endColumn":35},{"ruleId":"156","severity":1,"message":"171","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"185","line":116,"column":7,"nodeType":"158","messageId":"159","endLine":116,"endColumn":17},{"ruleId":"156","severity":1,"message":"186","line":122,"column":7,"nodeType":"158","messageId":"159","endLine":122,"endColumn":14},{"ruleId":"156","severity":1,"message":"171","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"187","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"188","line":17,"column":20,"nodeType":"158","messageId":"159","endLine":17,"endColumn":31},{"ruleId":"156","severity":1,"message":"189","line":18,"column":10,"nodeType":"158","messageId":"159","endLine":18,"endColumn":14},{"ruleId":"156","severity":1,"message":"190","line":18,"column":16,"nodeType":"158","messageId":"159","endLine":18,"endColumn":23},{"ruleId":"156","severity":1,"message":"191","line":26,"column":12,"nodeType":"158","messageId":"159","endLine":26,"endColumn":26},{"ruleId":"152","severity":1,"message":"192","line":93,"column":6,"nodeType":"154","endLine":93,"endColumn":8,"suggestions":"193"},{"ruleId":"156","severity":1,"message":"194","line":249,"column":7,"nodeType":"158","messageId":"159","endLine":249,"endColumn":14},{"ruleId":"156","severity":1,"message":"195","line":268,"column":7,"nodeType":"158","messageId":"159","endLine":268,"endColumn":21},{"ruleId":"156","severity":1,"message":"171","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"196","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"197","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"198","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'TOKEN'. Either include it or remove the dependency array.","ArrayExpression",["199"],"no-unused-vars","'tempFunction' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'BACKEND_URL' is defined but never used.","'CheckUserTokenValidity' is defined but never used.","'button' is assigned a value but never used.","'TOKEN' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.isLoggedIn'. Either include it or remove the dependency array. If 'setIsLoggedIn' needs the current value of 'props.isLoggedIn', you can also switch to useReducer instead of useState and read 'props.isLoggedIn' in the reducer.",["200"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'Navbar' is defined but never used.","React Hook useEffect has missing dependencies: 'props.isLoggedIn' and 'props.userDetails.id'. Either include them or remove the dependency array. If 'setIsLoggedIn' needs the current value of 'props.isLoggedIn', you can also switch to useReducer instead of useState and read 'props.isLoggedIn' in the reducer.",["201"],"'Link' is defined but never used.","'Button' is defined but never used.","no-native-reassign",["202"],"no-negated-in-lhs",["203"],"'Cookies' is defined but never used.","'Button' is assigned a value but never used.",["202"],["203"],"'InputImage' is assigned a value but never used.","'AddSeed' is assigned a value but never used.","'Modal' is defined but never used.","'setMainSeed' is assigned a value but never used.","'wait' is assigned a value but never used.","'setWait' is assigned a value but never used.","'renderCrawlers' is defined but never used.","React Hook useEffect has a missing dependency: 'props.location.state.seed._id'. Either include it or remove the dependency array.",["204"],"'Crawler' is assigned a value but never used.","'CrawlerWrapper' is assigned a value but never used.","'Component' is defined but never used.","'axiom' is defined but never used.","'React' is defined but never used.",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [TOKEN]",{"range":"213","text":"214"},"Update the dependencies array to be: [props.isLoggedIn]",{"range":"215","text":"216"},"Update the dependencies array to be: [props.isLoggedIn, props.userDetails.id]",{"range":"217","text":"218"},"Update the dependencies array to be: [props.location.state.seed._id]",{"range":"219","text":"220"},[1372,1374],"[TOKEN]",[866,868],"[props.isLoggedIn]",[1337,1339],"[props.isLoggedIn, props.userDetails.id]",[2994,2996],"[props.location.state.seed._id]"]