{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { BACKEND_URL } from \"../constants\";\n// import TinyMCEComponent from \"./TinyMCEComponent\";\n// import styled from \"styled-components\";\n//\n// export default function AddCrawler() {\n//   function tinyCallback(value) {\n//     setBody(value);\n//   }\n//\n//   const TOKEN =\n//     \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imt1bmFsYmhhdGlhQGdtYWlsLmNvbSIsImZpcnN0TmFtZSI6Ikt1bmFsIiwibGFzdG5hbWUiOiJCaGF0aWEiLCJ1c2VybmFtZSI6IktCaGF0aWEiLCJpZCI6IjYwNzA1MGYyN2Y5ZmI1MDNlNzVkNTA4MCIsIm51bWJlck9mU2VlZHNXcml0dGVuIjo1LCJudW1iZXJPZkNyYXdsc1dyaXR0ZW4iOjAsImlhdCI6MTYxODAxMzgzNiwiZXhwIjoxNjE4MDI0NjM2fQ.UrvgUTlwXoUcIBVY9ZIP8dx4pODVGRwNsBeBObZ1VVk\";\n//\n//   const [description, setDescription] = useState(\"The classic tale\");\n//   const [body, setBody] = useState(\"\");\n//\n//   const submitHandler = async (e) => {\n//     const detailsToSend = {\n//       description: description,\n//       body: body,\n//       parentWritingId: \"6070da14ad26c886066c8c81\",\n//     };\n//     e.preventDefault();\n//     console.log(detailsToSend);\n//     // axios.post('http://localhost:8010/writing-routes/add-new-crawler',detailsToSend,{\n//     //     headers:{\n//     //         'Content-Type':\"application/json\",\n//     //         'Authorization':`Bearer ${TOKEN}`\n//     //     }\n//     // }).then(response=>{\n//     //     console.log(\"New crawler added!\");\n//     //     console.log(response);\n//     // }).catch(err=>{\n//     //     console.log(\"Error adding new crawler!\");\n//     //     console.log(err);\n//     // })\n//   };\n//\n//   return (\n//     <div>\n//       <form>\n//         <Inputs>\n//           <label htmlFor={description}>Enter Desc:</label>\n//           <Input\n//             value={description}\n//             placeholder=\"Description\"\n//             onChange={(e) => {\n//               setDescription(e.target.value);\n//             }}\n//             type=\"text\"\n//           />\n//         </Inputs>\n//         {/*<textarea  onChange={(e) => (setBody(e.target.value))} placeholder='Body' name=\"body2\" id=\"body2\"/>*/}\n//         <TinyMCE>\n//           <TinyMCEComponent callback={tinyCallback} />\n//         </TinyMCE>\n//         <LastLine>\n//           <Button onClick={submitHandler}>Submit</Button>\n//         </LastLine>\n//       </form>\n//     </div>\n//   );\n// }\n//\n// const Button = styled.button`\n//   padding: 0.3rem 2rem;\n//   border-radius: 5px;\n//   margin: 1rem;\n//   text-align: center;\n//   cursor: pointer;\n//   transition: 0.3s all ease-out;\n//   font-size: 1rem;\n//   font-weight: bolder;\n//   &:hover {\n//     background-color: #100828;\n//     color: whitesmoke;\n//   }\n// `;\n//\n// const LastLine = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n//\n// const Input = styled.input`\n//   padding: 0.5rem 3rem;\n//   margin: 1rem;\n//   font-size: 1rem;\n//   border-radius: 10px;\n//   background-color: #100828;\n//   color: white;\n// `;\n//\n// const Inputs = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n//\n// const InputImage = styled.input`\n//   padding: 0.5rem 3rem;\n//   margin: 1rem;\n//   font-size: 1rem;\n// `;\n//\n// const AddSeed = styled.div`\n//   background-color: #dad8d8;\n//   margin: 0;\n//   padding: 0;\n//   height: 100vh;\n// `;\n//\n// const TinyMCE = styled.div`\n//   margin: 1rem;\n// `;","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { BACKEND_URL } from \"../constants\";\n// import TinyMCEComponent from \"./TinyMCEComponent\";\n// import styled from \"styled-components\";\n//\n// export default function AddCrawler() {\n//   function tinyCallback(value) {\n//     setBody(value);\n//   }\n//\n//   const TOKEN =\n//     \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imt1bmFsYmhhdGlhQGdtYWlsLmNvbSIsImZpcnN0TmFtZSI6Ikt1bmFsIiwibGFzdG5hbWUiOiJCaGF0aWEiLCJ1c2VybmFtZSI6IktCaGF0aWEiLCJpZCI6IjYwNzA1MGYyN2Y5ZmI1MDNlNzVkNTA4MCIsIm51bWJlck9mU2VlZHNXcml0dGVuIjo1LCJudW1iZXJPZkNyYXdsc1dyaXR0ZW4iOjAsImlhdCI6MTYxODAxMzgzNiwiZXhwIjoxNjE4MDI0NjM2fQ.UrvgUTlwXoUcIBVY9ZIP8dx4pODVGRwNsBeBObZ1VVk\";\n//\n//   const [description, setDescription] = useState(\"The classic tale\");\n//   const [body, setBody] = useState(\"\");\n//\n//   const submitHandler = async (e) => {\n//     const detailsToSend = {\n//       description: description,\n//       body: body,\n//       parentWritingId: \"6070da14ad26c886066c8c81\",\n//     };\n//     e.preventDefault();\n//     console.log(detailsToSend);\n//     // axios.post('http://localhost:8010/writing-routes/add-new-crawler',detailsToSend,{\n//     //     headers:{\n//     //         'Content-Type':\"application/json\",\n//     //         'Authorization':`Bearer ${TOKEN}`\n//     //     }\n//     // }).then(response=>{\n//     //     console.log(\"New crawler added!\");\n//     //     console.log(response);\n//     // }).catch(err=>{\n//     //     console.log(\"Error adding new crawler!\");\n//     //     console.log(err);\n//     // })\n//   };\n//\n//   return (\n//     <div>\n//       <form>\n//         <Inputs>\n//           <label htmlFor={description}>Enter Desc:</label>\n//           <Input\n//             value={description}\n//             placeholder=\"Description\"\n//             onChange={(e) => {\n//               setDescription(e.target.value);\n//             }}\n//             type=\"text\"\n//           />\n//         </Inputs>\n//         {/*<textarea  onChange={(e) => (setBody(e.target.value))} placeholder='Body' name=\"body2\" id=\"body2\"/>*/}\n//         <TinyMCE>\n//           <TinyMCEComponent callback={tinyCallback} />\n//         </TinyMCE>\n//         <LastLine>\n//           <Button onClick={submitHandler}>Submit</Button>\n//         </LastLine>\n//       </form>\n//     </div>\n//   );\n// }\n//\n// const Button = styled.button`\n//   padding: 0.3rem 2rem;\n//   border-radius: 5px;\n//   margin: 1rem;\n//   text-align: center;\n//   cursor: pointer;\n//   transition: 0.3s all ease-out;\n//   font-size: 1rem;\n//   font-weight: bolder;\n//   &:hover {\n//     background-color: #100828;\n//     color: whitesmoke;\n//   }\n// `;\n//\n// const LastLine = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n//\n// const Input = styled.input`\n//   padding: 0.5rem 3rem;\n//   margin: 1rem;\n//   font-size: 1rem;\n//   border-radius: 10px;\n//   background-color: #100828;\n//   color: white;\n// `;\n//\n// const Inputs = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n//\n// const InputImage = styled.input`\n//   padding: 0.5rem 3rem;\n//   margin: 1rem;\n//   font-size: 1rem;\n// `;\n//\n// const AddSeed = styled.div`\n//   background-color: #dad8d8;\n//   margin: 0;\n//   padding: 0;\n//   height: 100vh;\n// `;\n//\n// const TinyMCE = styled.div`\n//   margin: 1rem;\n// `;\n"]},"metadata":{},"sourceType":"module"}