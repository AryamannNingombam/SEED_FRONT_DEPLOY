{"ast":null,"code":"var _jsxFileName = \"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport tinymce from \"tinymce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddCrawler() {\n  _s();\n\n  // var script = document.createElement(\"script\");\n  // script.type = \"text/javascript\";\n  // script.src = \"https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js\";\n  // document.head.appendChild(script);\n  //\n  // script.onload = function () {\n  useEffect(() => {\n    tinymce.init({\n      selector: \"#body\",\n      plugins: [\"advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker\", \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\", \"table emoticons template paste help\"],\n      toolbar: \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | \" + \"bullist numlist outdent indent | link image | print preview media fullpage | \" + \"forecolor backcolor emoticons | help\",\n      menu: {\n        favs: {\n          title: \"My Favorites\",\n          items: \"code visualaid | searchreplace | spellchecker | emoticons\"\n        }\n      },\n      menubar: \"favs file edit view insert format tools table help\",\n      content_css: \"css/content.css\"\n    });\n  }, []);\n  const TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imt1bmFsYmhhdGlhQGdtYWlsLmNvbSIsImZpcnN0TmFtZSI6Ikt1bmFsIiwibGFzdG5hbWUiOiJCaGF0aWEiLCJ1c2VybmFtZSI6IktCaGF0aWEiLCJpZCI6IjYwNzA1MGYyN2Y5ZmI1MDNlNzVkNTA4MCIsIm51bWJlck9mU2VlZHNXcml0dGVuIjo1LCJudW1iZXJPZkNyYXdsc1dyaXR0ZW4iOjAsImlhdCI6MTYxODAxMzgzNiwiZXhwIjoxNjE4MDI0NjM2fQ.UrvgUTlwXoUcIBVY9ZIP8dx4pODVGRwNsBeBObZ1VVk\";\n  const [description, setDescription] = useState(\"The classic tale\");\n  const [body, setBody] = useState('');\n\n  const submitHandler = async e => {\n    const detailsToSend = {\n      description: description,\n      body: body,\n      parentWritingId: '6070da14ad26c886066c8c81'\n    };\n    e.preventDefault();\n    console.log(detailsToSend); // axios.post('http://localhost:8010/writing-routes/add-new-crawler',detailsToSend,{\n    //     headers:{\n    //         'Content-Type':\"application/json\",\n    //         'Authorization':`Bearer ${TOKEN}`\n    //     }\n    // }).then(response=>{\n    //     console.log(\"New crawler added!\");\n    //     console.log(response);\n    // }).catch(err=>{\n    //     console.log(\"Error adding new crawler!\");\n    //     console.log(err);\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        placeholder: \"Description\",\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          console.log(\"Body changed!\"); // setBody(tinymce.activeEditor.getContent());\n        },\n        name: \"body\",\n        id: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCrawler, \"+0eF7wUmBotCWVH6lhh0MZj3ZHA=\");\n\n_c = AddCrawler;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCrawler\");","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js"],"names":["React","useState","useEffect","axios","BACKEND_URL","tinymce","AddCrawler","init","selector","plugins","toolbar","menu","favs","title","items","menubar","content_css","TOKEN","description","setDescription","body","setBody","submitHandler","e","detailsToSend","parentWritingId","preventDefault","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,OAAP,MAAqB,SAArB;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC;AACA;AACA;AACA;AACA;AACA;AACEJ,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,OAAO,CAACE,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,OADD;AAGTC,MAAAA,OAAO,EAAE,CACL,0FADK,EAEL,mGAFK,EAGL,qCAHK,CAHA;AAQTC,MAAAA,OAAO,EACH,6FACA,+EADA,GAEA,sCAXK;AAYTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAE,cADL;AAEFC,UAAAA,KAAK,EAAE;AAFL;AADJ,OAZG;AAkBTC,MAAAA,OAAO,EAAE,oDAlBA;AAmBTC,MAAAA,WAAW,EAAE;AAnBJ,KAAb;AAsBH,GAvBQ,EAuBP,EAvBO,CAAT;AAyBF,QAAMC,KAAK,GACT,6WADF;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,kBAAD,CAA9C;AACA,QAAM,CACJmB,IADI,EAEJC,OAFI,IAGFpB,QAAQ,CAAC,EAAD,CAHZ;;AAME,QAAMqB,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/B,UAAMC,aAAa,GAAG;AAClBN,MAAAA,WAAW,EAACA,WADM;AAElBE,MAAAA,IAAI,EAACA,IAFa;AAGlBK,MAAAA,eAAe,EAAC;AAHE,KAAtB;AAKAF,IAAAA,CAAC,CAACG,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ,EAP+B,CAQ/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GArBD;;AAyBA,sBAEI;AAAA,2BACI;AAAA,8BAEI;AAAO,QAAA,KAAK,EAAEN,WAAd;AAA2B,QAAA,WAAW,EAAC,aAAvC;AAAqD,QAAA,QAAQ,EAAGK,CAAD,IAAK;AAACJ,UAAAA,cAAc,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAd;AAA+B,SAApG;AAAuG,QAAA,IAAI,EAAC;AAA5G;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAO,QAAA,QAAQ,EAAEP,CAAC,IAAE;AAChBI,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADgB,CAEhB;AACH,SAHD;AAGM,QAAA,IAAI,EAAC,MAHX;AAGkB,QAAA,EAAE,EAAC;AAHrB;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI;AAAQ,QAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH;;GApFuBhB,U;;KAAAA,U;AAoFvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport tinymce  from \"tinymce\";\nexport default function AddCrawler() {\n  // var script = document.createElement(\"script\");\n  // script.type = \"text/javascript\";\n  // script.src = \"https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js\";\n  // document.head.appendChild(script);\n  //\n  // script.onload = function () {\n    useEffect(()=>{\n        tinymce.init({\n            selector: \"#body\",\n\n            plugins: [\n                \"advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker\",\n                \"searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking\",\n                \"table emoticons template paste help\",\n            ],\n            toolbar:\n                \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | \" +\n                \"bullist numlist outdent indent | link image | print preview media fullpage | \" +\n                \"forecolor backcolor emoticons | help\",\n            menu: {\n                favs: {\n                    title: \"My Favorites\",\n                    items: \"code visualaid | searchreplace | spellchecker | emoticons\",\n                },\n            },\n            menubar: \"favs file edit view insert format tools table help\",\n            content_css: \"css/content.css\",\n        });\n\n    },[])\n\n  const TOKEN =\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imt1bmFsYmhhdGlhQGdtYWlsLmNvbSIsImZpcnN0TmFtZSI6Ikt1bmFsIiwibGFzdG5hbWUiOiJCaGF0aWEiLCJ1c2VybmFtZSI6IktCaGF0aWEiLCJpZCI6IjYwNzA1MGYyN2Y5ZmI1MDNlNzVkNTA4MCIsIm51bWJlck9mU2VlZHNXcml0dGVuIjo1LCJudW1iZXJPZkNyYXdsc1dyaXR0ZW4iOjAsImlhdCI6MTYxODAxMzgzNiwiZXhwIjoxNjE4MDI0NjM2fQ.UrvgUTlwXoUcIBVY9ZIP8dx4pODVGRwNsBeBObZ1VVk\";\n\n  const [description, setDescription] = useState(\"The classic tale\");\n  const [\n    body,\n    setBody\n  ] = useState('');\n\n\n    const submitHandler = async (e) => {\n        const detailsToSend = {\n            description:description,\n            body:body,\n            parentWritingId:'6070da14ad26c886066c8c81'\n        }\n        e.preventDefault();\n        console.log(detailsToSend);\n        // axios.post('http://localhost:8010/writing-routes/add-new-crawler',detailsToSend,{\n        //     headers:{\n        //         'Content-Type':\"application/json\",\n        //         'Authorization':`Bearer ${TOKEN}`\n        //     }\n        // }).then(response=>{\n        //     console.log(\"New crawler added!\");\n        //     console.log(response);\n        // }).catch(err=>{\n        //     console.log(\"Error adding new crawler!\");\n        //     console.log(err);\n        // })\n\n    };\n\n\n\n    return (\n        \n        <div>\n            <form>\n\n                <input value={description} placeholder='Description' onChange={(e)=>{setDescription(e.target.value)}}  type=\"text\"/>\n                {/*<textarea  onChange={(e) => (setBody(e.target.value))} placeholder='Body' name=\"body2\" id=\"body2\"/>*/}\n                <input onChange={e=>{\n                    console.log(\"Body changed!\");\n                    // setBody(tinymce.activeEditor.getContent());\n                }}    name=\"body\" id=\"body\"/>\n\n                <button onClick={submitHandler}>Submit</button>\n            </form>\n\n        </div>\n    );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}