{"ast":null,"code":"var _jsxFileName = \"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddSeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNewSeed() {\n  _s();\n\n  const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6I…0Nzl9.TjHsNC7T4idWFW3agO8eCLgDVAPzSt-EcpSRrsSoIHI';\n  const [title, setTitle] = useState('');\n  const [imageURL, setImageURL] = useState(null);\n  const [description, setDescription] = useState('');\n  const [body, setBody] = useState('');\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('imageURL', imageURL);\n    formData.append('description', description);\n    formData.append('body', body);\n    console.log(title);\n    console.log(imageURL);\n    console.log(description);\n    console.log(body); // await fetch(BACKEND_URL+'/writing-routes/add-new-seed',{\n    //     method:'POST',\n    //     body:formData,\n    //     headers:{\n    //         'Authorization':TOKEN\n    //     }\n    // }).then(response=>response.json()).then(response=>{\n    //     console.log(\"New seed added!\");\n    //     console.log(response);\n    // }).catch(err=>{\n    //     console.log(\"Error adding new seed!\");\n    //     console.log(err);\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Description\",\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Body\",\n        onChange: e => {\n          setBody(e.target.value);\n        },\n        name: \"body\",\n        id: \"body\",\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setImageURL(e.target.files[0]);\n        },\n        id: \"imageURL\",\n        name: \"imageURL\",\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewSeed, \"eqdbkS9AcHKPaZhTIBYWQn7KhBg=\");\n\n_c = AddNewSeed;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewSeed\");","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddSeed.js"],"names":["React","useState","axios","BACKEND_URL","AddNewSeed","TOKEN","title","setTitle","imageURL","setImageURL","description","setDescription","body","setBody","submitHandler","e","preventDefault","formData","FormData","append","console","log","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {BACKEND_URL} from \"../constants\";\n\nexport default function AddNewSeed (){\n    const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6I…0Nzl9.TjHsNC7T4idWFW3agO8eCLgDVAPzSt-EcpSRrsSoIHI';\n    const [title,setTitle] = useState('');\n    const [imageURL,setImageURL] = useState(null);\n    const [description,setDescription] = useState('');\n    const [body,setBody] = useState('');\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('title',title);\n        formData.append('imageURL',imageURL);\n        formData.append('description',description);\n        formData.append('body',body);\n        console.log(title);\n        console.log(imageURL);\n        console.log(description);\n        console.log(body);\n        // await fetch(BACKEND_URL+'/writing-routes/add-new-seed',{\n        //     method:'POST',\n        //     body:formData,\n        //     headers:{\n        //         'Authorization':TOKEN\n        //     }\n        // }).then(response=>response.json()).then(response=>{\n        //     console.log(\"New seed added!\");\n        //     console.log(response);\n        // }).catch(err=>{\n        //     console.log(\"Error adding new seed!\");\n        //     console.log(err);\n        // })\n\n    };\n\n\n    return (\n        <div>\n            <form>\n                <input placeholder='Title' onChange={(e)=>{setTitle(e.target.value)}}  type=\"text\"/>\n                <input placeholder='Description' onChange={(e)=>{setDescription(e.target.value)}}  type=\"text\"/>\n                <textarea placeholder='Body' onChange={(e)=>{setBody(e.target.value)}} name=\"body\" id=\"body\" cols=\"30\" rows=\"10\"></textarea>\n                <input onChange={(e)=>{setImageURL(e.target.files[0])}} id=\"imageURL\" name=\"imageURL\" type=\"file\" accept=\"image/*\" />\n                <button onClick={submitHandler}>Submit</button>\n            </form>\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}