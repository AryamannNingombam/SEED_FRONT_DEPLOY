{"ast":null,"code":"var _jsxFileName = \"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/HTMLRendering.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HTMLRendering() {\n  _s();\n\n  const [allSeeds, setAllSeeds] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:8010/writing-routes/get-all-seeds/').then(allSeeds => {\n      console.log(allSeeds.data);\n      setAllSeeds(allSeeds.data.allSeeds);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const renderAllSeeds = () => {\n    return allSeeds.map(seed => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: seed.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: seed.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: seed.body\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is a test component!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), renderAllSeeds()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HTMLRendering, \"TVDsP4WRHXMT8Mum9Z7AyaLD0OA=\");\n\n_c = HTMLRendering;\n\nvar _c;\n\n$RefreshReg$(_c, \"HTMLRendering\");","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/HTMLRendering.js"],"names":["React","useState","useEffect","axios","HTMLRendering","allSeeds","setAllSeeds","get","then","console","log","data","catch","err","renderAllSeeds","map","seed","title","description","__html","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,KAAK,CAACI,GAAN,CAAU,qDAAV,EAAiEC,IAAjE,CAAsEH,QAAQ,IAAE;AAC5EI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAArB;AACAL,MAAAA,WAAW,CAACD,QAAQ,CAACM,IAAT,CAAcN,QAAf,CAAX;AACH,KAHD,EAGGO,KAHH,CAGSC,GAAG,IAAE;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,KALD;AAQH,GATQ,EASP,EATO,CAAT;;AAUA,QAAMC,cAAc,GAAG,MAAI;AACvB,WAAOT,QAAQ,CAACU,GAAT,CAAaC,IAAI,IAAE;AACtB,0BACI;AAAA,gCACA;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAK,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAACH,IAAI,CAACI;AAAd;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA,sBADJ;AAOH,KARM,CAAP;AASH,GAVD;;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEEN,cAAc,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA/BuBV,a;;KAAAA,a","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios';\n\n\nexport default function HTMLRendering() {\n    const [allSeeds,setAllSeeds] = useState([]);\n    useEffect(()=>{\n        axios.get('http://localhost:8010/writing-routes/get-all-seeds/').then(allSeeds=>{\n            console.log(allSeeds.data);\n            setAllSeeds(allSeeds.data.allSeeds);\n        }).catch(err=>{\n            console.log(err);\n        })\n\n\n    },[]);\n    const renderAllSeeds = ()=>{\n        return allSeeds.map(seed=>{\n            return (\n                <>\n                <h2>{seed.title}</h2>\n                <h3>{seed.description}</h3>\n                <div dangerouslySetInnerHTML={{ __html:seed.body}}/>\n                </>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <h1>This is a test component!</h1>\n         {renderAllSeeds()}\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}