{"ast":null,"code":"var _jsxFileName = \"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport TinyMCEComponent from \"./TinyMCEComponent\";\nimport styled from \"styled-components\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddCrawler(props) {\n  _s();\n\n  function tinyCallback(value) {\n    setBody(value);\n  }\n\n  const history = useHistory();\n  const TOKEN = localStorage.getItem(\"TOKEN\");\n  const [description, setDescription] = useState(props.location.state.seed.description);\n  const [body, setBody] = useState(\"\");\n\n  const submitHandler = async e => {\n    const detailsToSend = {\n      description: description,\n      body: body,\n      parentWritingId: props.location.state.seed._id\n    };\n    e.preventDefault();\n    console.log(detailsToSend);\n    axios.post('http://localhost:8010/writing-routes/add-new-crawler', detailsToSend, {\n      headers: {\n        'Content-Type': \"application/json\",\n        'Authorization': `Bearer ${TOKEN}`\n      }\n    }).then(response => {\n      console.log(\"New crawler added!\");\n      console.log(response);\n      history.push('/');\n    }).catch(err => {\n      console.log(\"Error adding new crawler!\");\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Inputs, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: description,\n          children: \"Enter Desc:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: description,\n          placeholder: \"Description\",\n          onChange: e => {\n            setDescription(e.target.value);\n          },\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TinyMCE, {\n        children: /*#__PURE__*/_jsxDEV(TinyMCEComponent, {\n          body: props.location.state.body,\n          callback: tinyCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LastLine, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submitHandler,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCrawler, \"AXsVM6vrv8j3xYm5wn/z//bPrDE=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddCrawler;\nconst Button = styled.button`\n  padding: 0.3rem 2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.3s all ease-out;\n  font-size: 1rem;\n  font-weight: bolder;\n  &:hover {\n    background-color: #100828;\n    color: whitesmoke;\n  }\n`;\n_c2 = Button;\nconst LastLine = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c3 = LastLine;\nconst Input = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n  border-radius: 10px;\n  background-color: #100828;\n  color: white;\n`;\n_c4 = Input;\nconst Inputs = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c5 = Inputs;\nconst InputImage = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n`;\nconst AddSeed = styled.div`\n  background-color: #dad8d8;\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n`;\nconst TinyMCE = styled.div`\n  margin: 1rem;\n`;\n_c6 = TinyMCE;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AddCrawler\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"LastLine\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Inputs\");\n$RefreshReg$(_c6, \"TinyMCE\");","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddCrawler.js"],"names":["React","useState","useEffect","axios","BACKEND_URL","TinyMCEComponent","styled","useHistory","AddCrawler","props","tinyCallback","value","setBody","history","TOKEN","localStorage","getItem","description","setDescription","location","state","seed","body","submitHandler","e","detailsToSend","parentWritingId","_id","preventDefault","console","log","post","headers","then","response","push","catch","err","target","Button","button","LastLine","div","Input","input","Inputs","InputImage","AddSeed","TinyMCE"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport TinyMCEComponent from \"./TinyMCEComponent\";\nimport styled from \"styled-components\";\nimport {useHistory} from 'react-router-dom';\n\nexport default function AddCrawler(props) {\n  function tinyCallback(value) {\n    setBody(value);\n  }\n    const history = useHistory();\n  const TOKEN = localStorage.getItem(\"TOKEN\");\n\n  const [description, setDescription] = useState(props.location.state.seed.description);\n  const [body, setBody] = useState(\"\");\n\n  const submitHandler = async (e) => {\n    const detailsToSend = {\n      description: description,\n      body: body,\n      parentWritingId: props.location.state.seed._id,\n    };\n    e.preventDefault();\n    console.log(detailsToSend);\n    axios.post('http://localhost:8010/writing-routes/add-new-crawler',detailsToSend,{\n        headers:{\n            'Content-Type':\"application/json\",\n            'Authorization':`Bearer ${TOKEN}`\n        }\n    }).then(response=>{\n\n        console.log(\"New crawler added!\");\n        console.log(response);\n        history.push('/');\n\n    }).catch(err=>{\n        console.log(\"Error adding new crawler!\");\n        console.log(err);\n    })\n  };\n\n  return (\n    <div>\n      <form>\n        <Inputs>\n          <label htmlFor={description}>Enter Desc:</label>\n          <Input\n            value={description}\n            placeholder=\"Description\"\n            onChange={(e) => {\n              setDescription(e.target.value);\n            }}\n            type=\"text\"\n          />\n        </Inputs>\n        {/*<textarea  onChange={(e) => (setBody(e.target.value))} placeholder='Body' name=\"body2\" id=\"body2\"/>*/}\n        <TinyMCE>\n          <TinyMCEComponent body={props.location.state.body} callback={tinyCallback} />\n        </TinyMCE>\n        <LastLine>\n          <Button onClick={submitHandler}>Submit</Button>\n        </LastLine>\n      </form>\n    </div>\n  );\n}\n\nconst Button = styled.button`\n  padding: 0.3rem 2rem;\n  border-radius: 5px;\n  margin: 1rem;\n  text-align: center;\n  cursor: pointer;\n  transition: 0.3s all ease-out;\n  font-size: 1rem;\n  font-weight: bolder;\n  &:hover {\n    background-color: #100828;\n    color: whitesmoke;\n  }\n`;\n\nconst LastLine = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n  border-radius: 10px;\n  background-color: #100828;\n  color: white;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst InputImage = styled.input`\n  padding: 0.5rem 3rem;\n  margin: 1rem;\n  font-size: 1rem;\n`;\n\nconst AddSeed = styled.div`\n  background-color: #dad8d8;\n  margin: 0;\n  padding: 0;\n  height: 100vh;\n`;\n\nconst TinyMCE = styled.div`\n  margin: 1rem;\n`;\n"]},"metadata":{},"sourceType":"module"}