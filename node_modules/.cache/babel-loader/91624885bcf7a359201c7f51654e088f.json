{"ast":null,"code":"var _jsxFileName = \"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/SeedDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../../constants\";\nimport styled from \"styled-components\";\nimport \"./Details.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeedDetailsComponent(props) {\n  _s();\n\n  const [allCrawlers, setAllCrawlers] = useState([]);\n  const [mainSeed, setMainSeed] = useState(props.location.state.seed);\n  const [showData, setShowData] = useState(false);\n  const [showSeed, setShowSeed] = useState(false);\n\n  function renderCrawlers() {\n    return allCrawlers.map(crawler => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"crawler.authorID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 41\n    }, this));\n  }\n\n  useEffect(() => {\n    setMainSeed(props.location.state.seed);\n    axios.get(`${BACKEND_URL}writing-routes/get-crawlers-for-seed/${props.location.state.seed._id}/`).then(allCrawlers => {\n      if (allCrawlers.data.success) {\n        console.log(\"All crawlers arrived!\");\n        setAllCrawlers(allCrawlers.data.allCrawlers);\n        setShowData(true);\n      } else {\n        console.log(\"Could not fetch all crawlers!\");\n      }\n    }).catch(err => {\n      console.log(\"Error getting all the crawlers!\");\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Full, {\n    children: /*#__PURE__*/_jsxDEV(SeedContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SeedWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Seed, {\n          mainSeed: mainSeed,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: BACKEND_URL + mainSeed.imageURL,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: mainSeed.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CrawlerContainer, {\n        children: /*#__PURE__*/_jsxDEV(CrawlerWrapper, {\n          children: allCrawlers.map(crawler => /*#__PURE__*/_jsxDEV(Crawler, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: crawler.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, crawler.authorID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SeedDetailsComponent, \"bXy1F7g+LRLMbzUzBfGwXqCxNcM=\");\n\n_c = SeedDetailsComponent;\nconst Full = styled.div`\n  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n    url(\"/images/wallpaper.jpg\");\n  overflow: hidden;\n`;\n_c2 = Full;\nconst SeedContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  box-sizing: border-box;\n  overflow: hidden;\n`;\n_c3 = SeedContainer;\nconst SeedWrapper = styled.div`\n  color: white;\n  /* margin: 3rem; */\n  height: 60%;\n  max-width: 50vw;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  margin: 4rem 5rem;\n`;\n_c4 = SeedWrapper;\nconst Seed = styled.div`\n  font-size: 2rem;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 3rem 9rem 3rem;\n\n  img {\n    width: 40%;\n    height: 220px;\n    border-radius: 50%;\n    align-items: center;\n    text-align: center;\n    margin-top: 2rem;\n  }\n`;\n_c5 = Seed;\nconst Crawler = styled.div``;\n_c6 = Crawler;\nconst CrawlerContainer = styled.div`\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  backdrop-filter: blur(5px);\n  background-color: rgba(0, 26, 255, 0.1);\n`;\n_c7 = CrawlerContainer;\nconst CrawlerWrapper = styled.div`\n  color: white;\n  margin: 3rem;\n  max-width: 50%;\n  height: 30%;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 2rem 3rem;\n  border-radius: 20px;\n`;\n_c8 = CrawlerWrapper;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"SeedDetailsComponent\");\n$RefreshReg$(_c2, \"Full\");\n$RefreshReg$(_c3, \"SeedContainer\");\n$RefreshReg$(_c4, \"SeedWrapper\");\n$RefreshReg$(_c5, \"Seed\");\n$RefreshReg$(_c6, \"Crawler\");\n$RefreshReg$(_c7, \"CrawlerContainer\");\n$RefreshReg$(_c8, \"CrawlerWrapper\");","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/SeedDetails.js"],"names":["React","useState","useEffect","axios","BACKEND_URL","styled","SeedDetailsComponent","props","allCrawlers","setAllCrawlers","mainSeed","setMainSeed","location","state","seed","showData","setShowData","showSeed","setShowSeed","renderCrawlers","map","crawler","get","_id","then","data","success","console","log","catch","err","imageURL","title","authorID","Full","div","SeedContainer","SeedWrapper","Seed","Crawler","CrawlerContainer","CrawlerWrapper"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../../constants\";\nimport styled from \"styled-components\";\nimport \"./Details.scss\";\n\nexport default function SeedDetailsComponent(props) {\n  const [allCrawlers, setAllCrawlers] = useState([]);\n  const [mainSeed, setMainSeed] = useState(props.location.state.seed);\n  const [showData, setShowData] = useState(false);\n  const [showSeed, setShowSeed] = useState(false);\n  function renderCrawlers() {\n    return allCrawlers.map((crawler) => <h1>crawler.authorID</h1>);\n  }\n\n  useEffect(() => {\n    setMainSeed(props.location.state.seed);\n    axios\n      .get(\n        `${BACKEND_URL}writing-routes/get-crawlers-for-seed/${props.location.state.seed._id}/`\n      )\n      .then((allCrawlers) => {\n        if (allCrawlers.data.success) {\n          console.log(\"All crawlers arrived!\");\n\n          setAllCrawlers(allCrawlers.data.allCrawlers);\n          setShowData(true);\n        } else {\n          console.log(\"Could not fetch all crawlers!\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"Error getting all the crawlers!\");\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <Full>\n      <SeedContainer>\n        <SeedWrapper>\n          <Seed mainSeed={mainSeed}>\n            <img src={BACKEND_URL + mainSeed.imageURL} alt=\"img\"></img>\n            <h1>{mainSeed.title}</h1>\n          </Seed>\n        </SeedWrapper>\n        <CrawlerContainer>\n          <CrawlerWrapper>\n            {allCrawlers.map((crawler) => (\n              <Crawler key={crawler.authorID}>\n                <div>{crawler.title}</div>\n                {/* <div>{crawler.author}</div>\n                <div>{crawler.pointOfClicking}</div> */}\n              </Crawler>\n            ))}\n          </CrawlerWrapper>\n        </CrawlerContainer>\n      </SeedContainer>\n    </Full>\n  );\n}\n\nconst Full = styled.div`\n  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n    url(\"/images/wallpaper.jpg\");\n  overflow: hidden;\n`;\n\nconst SeedContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  box-sizing: border-box;\n  overflow: hidden;\n`;\n\nconst SeedWrapper = styled.div`\n  color: white;\n  /* margin: 3rem; */\n  height: 60%;\n  max-width: 50vw;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  margin: 4rem 5rem;\n`;\n\nconst Seed = styled.div`\n  font-size: 2rem;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 3rem 9rem 3rem;\n\n  img {\n    width: 40%;\n    height: 220px;\n    border-radius: 50%;\n    align-items: center;\n    text-align: center;\n    margin-top: 2rem;\n  }\n`;\n\nconst Crawler = styled.div``;\n\nconst CrawlerContainer = styled.div`\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  backdrop-filter: blur(5px);\n  background-color: rgba(0, 26, 255, 0.1);\n`;\n\nconst CrawlerWrapper = styled.div`\n  color: white;\n  margin: 3rem;\n  max-width: 50%;\n  height: 30%;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.1);\n  padding: 2rem 3rem;\n  border-radius: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}