{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { BACKEND_URL } from \"../../constants\";\n// import styled from \"styled-components\";\n//\n// export default function SeedDetailsComponent(props) {\n//   const [allCrawlers, setAllCrawlers] = useState([]);\n//   const [mainSeed, setMainSeed] = useState(props.location.state.seed);\n//   const [showData, setShowData] = useState(false);\n//   const [showSeed, setShowSeed] = useState(false);\n//   function renderCrawlers() {\n//     return allCrawlers.map((crawler) => <h1>crawler.authorID</h1>);\n//   }\n//\n//   useEffect(() => {\n//     setMainSeed(props.location.state.seed);\n//     axios\n//       .get(\n//         `${BACKEND_URL}writing-routes/get-crawlers-for-seed/${props.location.state.seed._id}/`\n//       )\n//       .then((allCrawlers) => {\n//         if (allCrawlers.data.success) {\n//           console.log(\"All crawlers arrived!\");\n//           console.log(allCrawlers);\n//\n//           setAllCrawlers(allCrawlers.data.allCrawlers);\n//           setShowData(true);\n//         } else {\n//           console.log(\"Could not fetch all crawlers!\");\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(\"Error getting all the crawlers!\");\n//         console.log(err);\n//       });\n//   }, []);\n//\n//   return (\n//     <SeedContainer>\n//       <SeedWrapper>\n//         <Seed mainSeed={mainSeed}>\n//           <img src={BACKEND_URL + mainSeed.imageURL} alt=\"img\"></img>\n//           <h1>{mainSeed.title}</h1>\n//         </Seed>\n//       </SeedWrapper>\n//       <CrawlerContainer>\n//         <CrawlerWrapper>\n//           {allCrawlers.map((crawler) => (\n//             <Crawler key={crawler.authorID}>{crawler.body}</Crawler>\n//           ))}\n//         </CrawlerWrapper>\n//       </CrawlerContainer>\n//     </SeedContainer>\n//   );\n// }\n//\n// const SeedContainer = styled.div`\n//   display: grid;\n//   grid-template-columns: 2fr 1fr;\n//   overflow: hidden;\n//   box-sizing: border-box;\n// `;\n//\n// const SeedWrapper = styled.div`\n//   background: red;\n//   color: white;\n//   margin: 3rem;\n//   max-height: 80vh;\n//   max-width: 50vw;\n// `;\n// const CrawlerWrapper = styled.div`\n//   background: green;\n//   color: white;\n//   margin: 3rem;\n// `;\n//\n// const Seed = styled.div`\n//   font-size: 2rem;\n//   color: white;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   img {\n//     width: 40%;\n//     height: 40%;\n//     border-radius: 50%;\n//     align-items: center;\n//     text-align: center;\n//     margin-bottom: 2rem;\n//     margin-top: 2rem;\n//   }\n// `;\n//\n// const Crawler = styled.div``;\n//\n// const CrawlerContainer = styled.div`\n//   overflow: scroll;\n//   background: gray;\n// `;","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/pages/SeedDetails.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { BACKEND_URL } from \"../../constants\";\n// import styled from \"styled-components\";\n//\n// export default function SeedDetailsComponent(props) {\n//   const [allCrawlers, setAllCrawlers] = useState([]);\n//   const [mainSeed, setMainSeed] = useState(props.location.state.seed);\n//   const [showData, setShowData] = useState(false);\n//   const [showSeed, setShowSeed] = useState(false);\n//   function renderCrawlers() {\n//     return allCrawlers.map((crawler) => <h1>crawler.authorID</h1>);\n//   }\n//\n//   useEffect(() => {\n//     setMainSeed(props.location.state.seed);\n//     axios\n//       .get(\n//         `${BACKEND_URL}writing-routes/get-crawlers-for-seed/${props.location.state.seed._id}/`\n//       )\n//       .then((allCrawlers) => {\n//         if (allCrawlers.data.success) {\n//           console.log(\"All crawlers arrived!\");\n//           console.log(allCrawlers);\n//\n//           setAllCrawlers(allCrawlers.data.allCrawlers);\n//           setShowData(true);\n//         } else {\n//           console.log(\"Could not fetch all crawlers!\");\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(\"Error getting all the crawlers!\");\n//         console.log(err);\n//       });\n//   }, []);\n//\n//   return (\n//     <SeedContainer>\n//       <SeedWrapper>\n//         <Seed mainSeed={mainSeed}>\n//           <img src={BACKEND_URL + mainSeed.imageURL} alt=\"img\"></img>\n//           <h1>{mainSeed.title}</h1>\n//         </Seed>\n//       </SeedWrapper>\n//       <CrawlerContainer>\n//         <CrawlerWrapper>\n//           {allCrawlers.map((crawler) => (\n//             <Crawler key={crawler.authorID}>{crawler.body}</Crawler>\n//           ))}\n//         </CrawlerWrapper>\n//       </CrawlerContainer>\n//     </SeedContainer>\n//   );\n// }\n//\n// const SeedContainer = styled.div`\n//   display: grid;\n//   grid-template-columns: 2fr 1fr;\n//   overflow: hidden;\n//   box-sizing: border-box;\n// `;\n//\n// const SeedWrapper = styled.div`\n//   background: red;\n//   color: white;\n//   margin: 3rem;\n//   max-height: 80vh;\n//   max-width: 50vw;\n// `;\n// const CrawlerWrapper = styled.div`\n//   background: green;\n//   color: white;\n//   margin: 3rem;\n// `;\n//\n// const Seed = styled.div`\n//   font-size: 2rem;\n//   color: white;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   img {\n//     width: 40%;\n//     height: 40%;\n//     border-radius: 50%;\n//     align-items: center;\n//     text-align: center;\n//     margin-bottom: 2rem;\n//     margin-top: 2rem;\n//   }\n// `;\n//\n// const Crawler = styled.div``;\n//\n// const CrawlerContainer = styled.div`\n//   overflow: scroll;\n//   background: gray;\n// `;\n"]},"metadata":{},"sourceType":"module"}