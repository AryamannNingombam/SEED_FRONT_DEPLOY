{"ast":null,"code":"var _jsxFileName = \"/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddSeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddNewSeed() {\n  _s();\n\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = 'https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js';\n  document.head.appendChild(script);\n\n  script.onload = function () {\n    //\n    tinymce.init({\n      selector: '#body',\n      plugins: ['advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker', 'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking', 'table emoticons template paste help'],\n      toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | ' + 'bullist numlist outdent indent | link image | print preview media fullpage | ' + 'forecolor backcolor emoticons | help',\n      menu: {\n        favs: {\n          title: 'My Favorites',\n          items: 'code visualaid | searchreplace | spellchecker | emoticons'\n        }\n      },\n      menubar: 'favs file edit view insert format tools table help',\n      content_css: 'css/content.css'\n    });\n  };\n\n  const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhaHVAZ21haWwuY29tIiwiZmlyc3ROYW1lIjoiUmFheWFhbiIsImxhc3RuYW1lIjoiU2FodSIsInVzZXJuYW1lIjoibGFmZW8iLCJpZCI6IjYwNzA1MGRhN2Y5ZmI1MDNlNzVkNTA3ZiIsIm51bWJlck9mU2VlZHNXcml0dGVuIjo1LCJudW1iZXJPZkNyYXdsc1dyaXR0ZW4iOjEsImlhdCI6MTYxODAwODU2NCwiZXhwIjoxNjE4MDE5MzY0fQ.M8c5JdaZJCG4HEHK6XZ8yxeIUgE-XCo7C7iuNdA78a8';\n  const [title, setTitle] = useState('Jack and the beanstalk');\n  const [imageURL, setImageURL] = useState(null);\n  const [description, setDescription] = useState('The classic tale');\n  const [body, setBody] = useState(``);\n  useEffect(() => {}, []);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('imageURL', imageURL);\n    formData.append('description', description);\n    formData.append('body', body);\n    console.log(body); // axios.post('http://localhost:8010/writing-routes/add-new-seed',formData,{\n    //     headers:{\n    //         'Content-Type':\"multipart/form-data\",\n    //         'Authorization':`Bearer ${TOKEN}`\n    //     }\n    // }).then(response=>{\n    //      console.log(\"New seed added!\");\n    //      console.log(response);\n    //  }).catch(err=>{\n    //      console.log(\"Error adding new seed!\");\n    //      console.log(err);\n    //  })\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        placeholder: \"Title\",\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        placeholder: \"Description\",\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          console.log(\"Body changed!\"); // setBody(tinymce.activeEditor.getContent());\n        },\n        name: \"body\",\n        id: \"body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          setImageURL(e.target.files[0]);\n        },\n        id: \"imageURL\",\n        name: \"imageURL\",\n        type: \"file\",\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddNewSeed, \"oqFHC5aCoQNwPAgwWUHoQ/mrIrU=\");\n\n_c = AddNewSeed;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewSeed\");","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/src/components/AddSeed.js"],"names":["React","useState","useEffect","axios","BACKEND_URL","AddNewSeed","script","document","createElement","type","src","head","appendChild","onload","tinymce","init","selector","plugins","toolbar","menu","favs","title","items","menubar","content_css","TOKEN","setTitle","imageURL","setImageURL","description","setDescription","body","setBody","submitHandler","e","preventDefault","formData","FormData","append","console","log","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport {BACKEND_URL} from \"../constants\";\n\n\nexport default function AddNewSeed (){\n    var script = document.createElement('script');\n    script.type  = 'text/javascript';\n    script.src = 'https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js';\n    document.head.appendChild(script);\n\n    script.onload = function(){\n        //\n        tinymce.init({\n            selector: '#body',\n\n            plugins: [\n                'advlist autolink link image lists charmap print preview hr anchor pagebreak spellchecker',\n                'searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking',\n                'table emoticons template paste help'\n            ],\n            toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | ' +\n                'bullist numlist outdent indent | link image | print preview media fullpage | ' +\n                'forecolor backcolor emoticons | help',\n            menu: {\n                favs: {title: 'My Favorites', items: 'code visualaid | searchreplace | spellchecker | emoticons'}\n            },\n            menubar: 'favs file edit view insert format tools table help',\n            content_css: 'css/content.css'\n        });\n\n\n    };\n\n    const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNhaHVAZ21haWwuY29tIiwiZmlyc3ROYW1lIjoiUmFheWFhbiIsImxhc3RuYW1lIjoiU2FodSIsInVzZXJuYW1lIjoibGFmZW8iLCJpZCI6IjYwNzA1MGRhN2Y5ZmI1MDNlNzVkNTA3ZiIsIm51bWJlck9mU2VlZHNXcml0dGVuIjo1LCJudW1iZXJPZkNyYXdsc1dyaXR0ZW4iOjEsImlhdCI6MTYxODAwODU2NCwiZXhwIjoxNjE4MDE5MzY0fQ.M8c5JdaZJCG4HEHK6XZ8yxeIUgE-XCo7C7iuNdA78a8';\n    const [title,setTitle] = useState('Jack and the beanstalk');\n    const [imageURL,setImageURL] = useState(null);\n    const [description,setDescription] = useState('The classic tale');\n    const [body,setBody] = useState(``);\n\n\n    useEffect(()=>{\n\n    },[])\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('title',title);\n        formData.append('imageURL',imageURL);\n        formData.append('description',description);\n        formData.append('body',body);\n        console.log(body);\n       // axios.post('http://localhost:8010/writing-routes/add-new-seed',formData,{\n       //     headers:{\n       //         'Content-Type':\"multipart/form-data\",\n       //         'Authorization':`Bearer ${TOKEN}`\n       //     }\n       // }).then(response=>{\n       //      console.log(\"New seed added!\");\n       //      console.log(response);\n       //  }).catch(err=>{\n       //      console.log(\"Error adding new seed!\");\n       //      console.log(err);\n       //  })\n\n    };\n\n\n\n    return (\n        <div>\n            <form>\n                <input value={title} placeholder='Title' onChange={(e)=>{setTitle(e.target.value)}}  type=\"text\"/>\n                <input value={description} placeholder='Description' onChange={(e)=>{setDescription(e.target.value)}}  type=\"text\"/>\n\n                <input onChange={e=>{\n                    console.log(\"Body changed!\");\n                    // setBody(tinymce.activeEditor.getContent());\n                }}    name=\"body\" id=\"body\"/>\n                <input onChange={(e)=>{setImageURL(e.target.files[0])}} id=\"imageURL\" name=\"imageURL\" type=\"file\" accept=\"image/*\" />\n                <button onClick={submitHandler}>Submit</button>\n            </form>\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}