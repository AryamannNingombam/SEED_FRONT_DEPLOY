{"ast":null,"code":"/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.7.1 (2021-03-17)\n */\n(function () {\n  'use strict';\n\n  var Cell = function (initial) {\n    var value = initial;\n\n    var get = function () {\n      return value;\n    };\n\n    var set = function (v) {\n      value = v;\n    };\n\n    return {\n      get: get,\n      set: set\n    };\n  };\n\n  var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n  var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n  var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n  var fireResizeEditor = function (editor) {\n    return editor.fire('ResizeEditor');\n  };\n\n  var getAutoResizeMinHeight = function (editor) {\n    return editor.getParam('min_height', editor.getElement().offsetHeight, 'number');\n  };\n\n  var getAutoResizeMaxHeight = function (editor) {\n    return editor.getParam('max_height', 0, 'number');\n  };\n\n  var getAutoResizeOverflowPadding = function (editor) {\n    return editor.getParam('autoresize_overflow_padding', 1, 'number');\n  };\n\n  var getAutoResizeBottomMargin = function (editor) {\n    return editor.getParam('autoresize_bottom_margin', 50, 'number');\n  };\n\n  var shouldAutoResizeOnInit = function (editor) {\n    return editor.getParam('autoresize_on_init', true, 'boolean');\n  };\n\n  var isFullscreen = function (editor) {\n    return editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\n  };\n\n  var wait = function (editor, oldSize, times, interval, callback) {\n    global$2.setEditorTimeout(editor, function () {\n      resize(editor, oldSize);\n\n      if (times--) {\n        wait(editor, oldSize, times, interval, callback);\n      } else if (callback) {\n        callback();\n      }\n    }, interval);\n  };\n\n  var toggleScrolling = function (editor, state) {\n    var body = editor.getBody();\n\n    if (body) {\n      body.style.overflowY = state ? '' : 'hidden';\n\n      if (!state) {\n        body.scrollTop = 0;\n      }\n    }\n  };\n\n  var parseCssValueToInt = function (dom, elm, name, computed) {\n    var value = parseInt(dom.getStyle(elm, name, computed), 10);\n    return isNaN(value) ? 0 : value;\n  };\n\n  var resize = function (editor, oldSize) {\n    var dom = editor.dom;\n    var doc = editor.getDoc();\n\n    if (!doc) {\n      return;\n    }\n\n    if (isFullscreen(editor)) {\n      toggleScrolling(editor, true);\n      return;\n    }\n\n    var docEle = doc.documentElement;\n    var resizeBottomMargin = getAutoResizeBottomMargin(editor);\n    var resizeHeight = getAutoResizeMinHeight(editor);\n    var marginTop = parseCssValueToInt(dom, docEle, 'margin-top', true);\n    var marginBottom = parseCssValueToInt(dom, docEle, 'margin-bottom', true);\n    var contentHeight = docEle.offsetHeight + marginTop + marginBottom + resizeBottomMargin;\n\n    if (contentHeight < 0) {\n      contentHeight = 0;\n    }\n\n    var containerHeight = editor.getContainer().offsetHeight;\n    var contentAreaHeight = editor.getContentAreaContainer().offsetHeight;\n    var chromeHeight = containerHeight - contentAreaHeight;\n\n    if (contentHeight + chromeHeight > getAutoResizeMinHeight(editor)) {\n      resizeHeight = contentHeight + chromeHeight;\n    }\n\n    var maxHeight = getAutoResizeMaxHeight(editor);\n\n    if (maxHeight && resizeHeight > maxHeight) {\n      resizeHeight = maxHeight;\n      toggleScrolling(editor, true);\n    } else {\n      toggleScrolling(editor, false);\n    }\n\n    if (resizeHeight !== oldSize.get()) {\n      var deltaSize = resizeHeight - oldSize.get();\n      dom.setStyle(editor.getContainer(), 'height', resizeHeight + 'px');\n      oldSize.set(resizeHeight);\n      fireResizeEditor(editor);\n\n      if (global$1.browser.isSafari() && global$1.mac) {\n        var win = editor.getWin();\n        win.scrollTo(win.pageXOffset, win.pageYOffset);\n      }\n\n      if (editor.hasFocus()) {\n        editor.selection.scrollIntoView(editor.selection.getNode());\n      }\n\n      if (global$1.webkit && deltaSize < 0) {\n        resize(editor, oldSize);\n      }\n    }\n  };\n\n  var setup = function (editor, oldSize) {\n    editor.on('init', function () {\n      var overflowPadding = getAutoResizeOverflowPadding(editor);\n      var dom = editor.dom;\n      dom.setStyles(editor.getDoc().documentElement, {\n        height: 'auto'\n      });\n      dom.setStyles(editor.getBody(), {\n        'paddingLeft': overflowPadding,\n        'paddingRight': overflowPadding,\n        'min-height': 0\n      });\n    });\n    editor.on('NodeChange SetContent keyup FullscreenStateChanged ResizeContent', function () {\n      resize(editor, oldSize);\n    });\n\n    if (shouldAutoResizeOnInit(editor)) {\n      editor.on('init', function () {\n        wait(editor, oldSize, 20, 100, function () {\n          wait(editor, oldSize, 5, 1000);\n        });\n      });\n    }\n  };\n\n  var register = function (editor, oldSize) {\n    editor.addCommand('mceAutoResize', function () {\n      resize(editor, oldSize);\n    });\n  };\n\n  function Plugin() {\n    global.add('autoresize', function (editor) {\n      if (!editor.settings.hasOwnProperty('resize')) {\n        editor.settings.resize = false;\n      }\n\n      if (!editor.inline) {\n        var oldSize = Cell(0);\n        register(editor, oldSize);\n        setup(editor, oldSize);\n      }\n    });\n  }\n\n  Plugin();\n})();","map":{"version":3,"sources":["/Users/katana/Desktop/Programming/Hackathons/SEED/frontend/node_modules/tinymce/plugins/autoresize/plugin.js"],"names":["Cell","initial","value","get","set","v","global","tinymce","util","Tools","resolve","global$1","global$2","fireResizeEditor","editor","fire","getAutoResizeMinHeight","getParam","getElement","offsetHeight","getAutoResizeMaxHeight","getAutoResizeOverflowPadding","getAutoResizeBottomMargin","shouldAutoResizeOnInit","isFullscreen","plugins","fullscreen","wait","oldSize","times","interval","callback","setEditorTimeout","resize","toggleScrolling","state","body","getBody","style","overflowY","scrollTop","parseCssValueToInt","dom","elm","name","computed","parseInt","getStyle","isNaN","doc","getDoc","docEle","documentElement","resizeBottomMargin","resizeHeight","marginTop","marginBottom","contentHeight","containerHeight","getContainer","contentAreaHeight","getContentAreaContainer","chromeHeight","maxHeight","deltaSize","setStyle","browser","isSafari","mac","win","getWin","scrollTo","pageXOffset","pageYOffset","hasFocus","selection","scrollIntoView","getNode","webkit","setup","on","overflowPadding","setStyles","height","register","addCommand","Plugin","add","settings","hasOwnProperty","inline"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.7.1 (2021-03-17)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var fireResizeEditor = function (editor) {\n      return editor.fire('ResizeEditor');\n    };\n\n    var getAutoResizeMinHeight = function (editor) {\n      return editor.getParam('min_height', editor.getElement().offsetHeight, 'number');\n    };\n    var getAutoResizeMaxHeight = function (editor) {\n      return editor.getParam('max_height', 0, 'number');\n    };\n    var getAutoResizeOverflowPadding = function (editor) {\n      return editor.getParam('autoresize_overflow_padding', 1, 'number');\n    };\n    var getAutoResizeBottomMargin = function (editor) {\n      return editor.getParam('autoresize_bottom_margin', 50, 'number');\n    };\n    var shouldAutoResizeOnInit = function (editor) {\n      return editor.getParam('autoresize_on_init', true, 'boolean');\n    };\n\n    var isFullscreen = function (editor) {\n      return editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\n    };\n    var wait = function (editor, oldSize, times, interval, callback) {\n      global$2.setEditorTimeout(editor, function () {\n        resize(editor, oldSize);\n        if (times--) {\n          wait(editor, oldSize, times, interval, callback);\n        } else if (callback) {\n          callback();\n        }\n      }, interval);\n    };\n    var toggleScrolling = function (editor, state) {\n      var body = editor.getBody();\n      if (body) {\n        body.style.overflowY = state ? '' : 'hidden';\n        if (!state) {\n          body.scrollTop = 0;\n        }\n      }\n    };\n    var parseCssValueToInt = function (dom, elm, name, computed) {\n      var value = parseInt(dom.getStyle(elm, name, computed), 10);\n      return isNaN(value) ? 0 : value;\n    };\n    var resize = function (editor, oldSize) {\n      var dom = editor.dom;\n      var doc = editor.getDoc();\n      if (!doc) {\n        return;\n      }\n      if (isFullscreen(editor)) {\n        toggleScrolling(editor, true);\n        return;\n      }\n      var docEle = doc.documentElement;\n      var resizeBottomMargin = getAutoResizeBottomMargin(editor);\n      var resizeHeight = getAutoResizeMinHeight(editor);\n      var marginTop = parseCssValueToInt(dom, docEle, 'margin-top', true);\n      var marginBottom = parseCssValueToInt(dom, docEle, 'margin-bottom', true);\n      var contentHeight = docEle.offsetHeight + marginTop + marginBottom + resizeBottomMargin;\n      if (contentHeight < 0) {\n        contentHeight = 0;\n      }\n      var containerHeight = editor.getContainer().offsetHeight;\n      var contentAreaHeight = editor.getContentAreaContainer().offsetHeight;\n      var chromeHeight = containerHeight - contentAreaHeight;\n      if (contentHeight + chromeHeight > getAutoResizeMinHeight(editor)) {\n        resizeHeight = contentHeight + chromeHeight;\n      }\n      var maxHeight = getAutoResizeMaxHeight(editor);\n      if (maxHeight && resizeHeight > maxHeight) {\n        resizeHeight = maxHeight;\n        toggleScrolling(editor, true);\n      } else {\n        toggleScrolling(editor, false);\n      }\n      if (resizeHeight !== oldSize.get()) {\n        var deltaSize = resizeHeight - oldSize.get();\n        dom.setStyle(editor.getContainer(), 'height', resizeHeight + 'px');\n        oldSize.set(resizeHeight);\n        fireResizeEditor(editor);\n        if (global$1.browser.isSafari() && global$1.mac) {\n          var win = editor.getWin();\n          win.scrollTo(win.pageXOffset, win.pageYOffset);\n        }\n        if (editor.hasFocus()) {\n          editor.selection.scrollIntoView(editor.selection.getNode());\n        }\n        if (global$1.webkit && deltaSize < 0) {\n          resize(editor, oldSize);\n        }\n      }\n    };\n    var setup = function (editor, oldSize) {\n      editor.on('init', function () {\n        var overflowPadding = getAutoResizeOverflowPadding(editor);\n        var dom = editor.dom;\n        dom.setStyles(editor.getDoc().documentElement, { height: 'auto' });\n        dom.setStyles(editor.getBody(), {\n          'paddingLeft': overflowPadding,\n          'paddingRight': overflowPadding,\n          'min-height': 0\n        });\n      });\n      editor.on('NodeChange SetContent keyup FullscreenStateChanged ResizeContent', function () {\n        resize(editor, oldSize);\n      });\n      if (shouldAutoResizeOnInit(editor)) {\n        editor.on('init', function () {\n          wait(editor, oldSize, 20, 100, function () {\n            wait(editor, oldSize, 5, 1000);\n          });\n        });\n      }\n    };\n\n    var register = function (editor, oldSize) {\n      editor.addCommand('mceAutoResize', function () {\n        resize(editor, oldSize);\n      });\n    };\n\n    function Plugin () {\n      global.add('autoresize', function (editor) {\n        if (!editor.settings.hasOwnProperty('resize')) {\n          editor.settings.resize = false;\n        }\n        if (!editor.inline) {\n          var oldSize = Cell(0);\n          register(editor, oldSize);\n          setup(editor, oldSize);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"]},"metadata":{},"sourceType":"script"}